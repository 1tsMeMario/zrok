{"version":3,"sources":["../../../../src/zrok/api/runtime.ts","../../../../src/zrok/api/models/InviteRequest.ts","../../../../src/zrok/api/models/LoginRequest.ts","../../../../src/zrok/api/models/RegisterRequest.ts","../../../../src/zrok/api/models/RegisterResponse.ts","../../../../src/zrok/api/models/ResetPasswordRequest.ts","../../../../src/zrok/api/models/ResetPasswordRequestRequest.ts","../../../../src/zrok/api/models/VerifyRequest.ts","../../../../src/zrok/api/models/VerifyResponse.ts","../../../../src/zrok/api/apis/AccountApi.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/**\n * zrok\n * zrok client access\n *\n * The version of the OpenAPI document: 0.3.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport const BASE_PATH = \"/api/v1\".replace(/\\/+$/, \"\");\n\nexport interface ConfigurationParameters {\n    basePath?: string; // override base path\n    fetchApi?: FetchAPI; // override for fetch implementation\n    middleware?: Middleware[]; // middleware to apply before/after fetch requests\n    queryParamsStringify?: (params: HTTPQuery) => string; // stringify function for query strings\n    username?: string; // parameter for basic security\n    password?: string; // parameter for basic security\n    apiKey?: string | ((name: string) => string); // parameter for apiKey security\n    accessToken?: string | Promise<string> | ((name?: string, scopes?: string[]) => string | Promise<string>); // parameter for oauth2 security\n    headers?: HTTPHeaders; //header params we want to use on every request\n    credentials?: RequestCredentials; //value for the credentials param we want to use on each request\n}\n\nexport class Configuration {\n    constructor(private configuration: ConfigurationParameters = {}) {}\n\n    set config(configuration: Configuration) {\n        this.configuration = configuration;\n    }\n\n    get basePath(): string {\n        return this.configuration.basePath != null ? this.configuration.basePath : BASE_PATH;\n    }\n\n    get fetchApi(): FetchAPI | undefined {\n        return this.configuration.fetchApi;\n    }\n\n    get middleware(): Middleware[] {\n        return this.configuration.middleware || [];\n    }\n\n    get queryParamsStringify(): (params: HTTPQuery) => string {\n        return this.configuration.queryParamsStringify || querystring;\n    }\n\n    get username(): string | undefined {\n        return this.configuration.username;\n    }\n\n    get password(): string | undefined {\n        return this.configuration.password;\n    }\n\n    get apiKey(): ((name: string) => string) | undefined {\n        const apiKey = this.configuration.apiKey;\n        if (apiKey) {\n            return typeof apiKey === 'function' ? apiKey : () => apiKey;\n        }\n        return undefined;\n    }\n\n    get accessToken(): ((name?: string, scopes?: string[]) => string | Promise<string>) | undefined {\n        const accessToken = this.configuration.accessToken;\n        if (accessToken) {\n            return typeof accessToken === 'function' ? accessToken : async () => accessToken;\n        }\n        return undefined;\n    }\n\n    get headers(): HTTPHeaders | undefined {\n        return this.configuration.headers;\n    }\n\n    get credentials(): RequestCredentials | undefined {\n        return this.configuration.credentials;\n    }\n}\n\nexport const DefaultConfig = new Configuration();\n\n/**\n * This is the base class for all generated API classes.\n */\nexport class BaseAPI {\n\n\t private static readonly jsonRegex = new RegExp('^(:?application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(:?;.*)?$', 'i');\n    private middleware: Middleware[];\n\n    constructor(protected configuration = DefaultConfig) {\n        this.middleware = configuration.middleware;\n    }\n\n    withMiddleware<T extends BaseAPI>(this: T, ...middlewares: Middleware[]) {\n        const next = this.clone<T>();\n        next.middleware = next.middleware.concat(...middlewares);\n        return next;\n    }\n\n    withPreMiddleware<T extends BaseAPI>(this: T, ...preMiddlewares: Array<Middleware['pre']>) {\n        const middlewares = preMiddlewares.map((pre) => ({ pre }));\n        return this.withMiddleware<T>(...middlewares);\n    }\n\n    withPostMiddleware<T extends BaseAPI>(this: T, ...postMiddlewares: Array<Middleware['post']>) {\n        const middlewares = postMiddlewares.map((post) => ({ post }));\n        return this.withMiddleware<T>(...middlewares);\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    protected isJsonMime(mime: string | null | undefined): boolean {\n        if (!mime) {\n            return false;\n        }\n        return BaseAPI.jsonRegex.test(mime);\n    }\n\n    protected async request(context: RequestOpts, initOverrides?: RequestInit | InitOverrideFunction): Promise<Response> {\n        const { url, init } = await this.createFetchParams(context, initOverrides);\n        const response = await this.fetchApi(url, init);\n        if (response && (response.status >= 200 && response.status < 300)) {\n            return response;\n        }\n        throw new ResponseError(response, 'Response returned an error code');\n    }\n\n    private async createFetchParams(context: RequestOpts, initOverrides?: RequestInit | InitOverrideFunction) {\n        let url = this.configuration.basePath + context.path;\n        if (context.query !== undefined && Object.keys(context.query).length !== 0) {\n            // only add the querystring to the URL if there are query parameters.\n            // this is done to avoid urls ending with a \"?\" character which buggy webservers\n            // do not handle correctly sometimes.\n            url += '?' + this.configuration.queryParamsStringify(context.query);\n        }\n\n        const headers = Object.assign({}, this.configuration.headers, context.headers);\n        Object.keys(headers).forEach(key => headers[key] === undefined ? delete headers[key] : {});\n\n        const initOverrideFn =\n            typeof initOverrides === \"function\"\n                ? initOverrides\n                : async () => initOverrides;\n\n        const initParams = {\n            method: context.method,\n            headers,\n            body: context.body,\n            credentials: this.configuration.credentials,\n        };\n\n        const overriddenInit: RequestInit = {\n            ...initParams,\n            ...(await initOverrideFn({\n                init: initParams,\n                context,\n            }))\n        };\n\n        let body: any;\n        if (isFormData(overriddenInit.body)\n            || (overriddenInit.body instanceof URLSearchParams)\n            || isBlob(overriddenInit.body)) {\n          body = overriddenInit.body;\n        } else if (this.isJsonMime(headers['Content-Type'])) {\n          body = JSON.stringify(overriddenInit.body);\n        } else {\n          body = overriddenInit.body;\n        }\n\n        const init: RequestInit = {\n            ...overriddenInit,\n            body\n        };\n\n        return { url, init };\n    }\n\n    private fetchApi = async (url: string, init: RequestInit) => {\n        let fetchParams = { url, init };\n        for (const middleware of this.middleware) {\n            if (middleware.pre) {\n                fetchParams = await middleware.pre({\n                    fetch: this.fetchApi,\n                    ...fetchParams,\n                }) || fetchParams;\n            }\n        }\n        let response: Response | undefined = undefined;\n        try {\n            response = await (this.configuration.fetchApi || fetch)(fetchParams.url, fetchParams.init);\n        } catch (e) {\n            for (const middleware of this.middleware) {\n                if (middleware.onError) {\n                    response = await middleware.onError({\n                        fetch: this.fetchApi,\n                        url: fetchParams.url,\n                        init: fetchParams.init,\n                        error: e,\n                        response: response ? response.clone() : undefined,\n                    }) || response;\n                }\n            }\n            if (response === undefined) {\n              if (e instanceof Error) {\n                throw new FetchError(e, 'The request failed and the interceptors did not return an alternative response');\n              } else {\n                throw e;\n              }\n            }\n        }\n        for (const middleware of this.middleware) {\n            if (middleware.post) {\n                response = await middleware.post({\n                    fetch: this.fetchApi,\n                    url: fetchParams.url,\n                    init: fetchParams.init,\n                    response: response.clone(),\n                }) || response;\n            }\n        }\n        return response;\n    }\n\n    /**\n     * Create a shallow clone of `this` by constructing a new instance\n     * and then shallow cloning data members.\n     */\n    private clone<T extends BaseAPI>(this: T): T {\n        const constructor = this.constructor as any;\n        const next = new constructor(this.configuration);\n        next.middleware = this.middleware.slice();\n        return next;\n    }\n};\n\nfunction isBlob(value: any): value is Blob {\n    return typeof Blob !== 'undefined' && value instanceof Blob;\n}\n\nfunction isFormData(value: any): value is FormData {\n    return typeof FormData !== \"undefined\" && value instanceof FormData;\n}\n\nexport class ResponseError extends Error {\n    override name: \"ResponseError\" = \"ResponseError\";\n    constructor(public response: Response, msg?: string) {\n        super(msg);\n    }\n}\n\nexport class FetchError extends Error {\n    override name: \"FetchError\" = \"FetchError\";\n    constructor(public cause: Error, msg?: string) {\n        super(msg);\n    }\n}\n\nexport class RequiredError extends Error {\n    override name: \"RequiredError\" = \"RequiredError\";\n    constructor(public field: string, msg?: string) {\n        super(msg);\n    }\n}\n\nexport const COLLECTION_FORMATS = {\n    csv: \",\",\n    ssv: \" \",\n    tsv: \"\\t\",\n    pipes: \"|\",\n};\n\nexport type FetchAPI = WindowOrWorkerGlobalScope['fetch'];\n\nexport type Json = any;\nexport type HTTPMethod = 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE' | 'OPTIONS' | 'HEAD';\nexport type HTTPHeaders = { [key: string]: string };\nexport type HTTPQuery = { [key: string]: string | number | null | boolean | Array<string | number | null | boolean> | Set<string | number | null | boolean> | HTTPQuery };\nexport type HTTPBody = Json | FormData | URLSearchParams;\nexport type HTTPRequestInit = { headers?: HTTPHeaders; method: HTTPMethod; credentials?: RequestCredentials; body?: HTTPBody };\nexport type ModelPropertyNaming = 'camelCase' | 'snake_case' | 'PascalCase' | 'original';\n\nexport type InitOverrideFunction = (requestContext: { init: HTTPRequestInit, context: RequestOpts }) => Promise<RequestInit>\n\nexport interface FetchParams {\n    url: string;\n    init: RequestInit;\n}\n\nexport interface RequestOpts {\n    path: string;\n    method: HTTPMethod;\n    headers: HTTPHeaders;\n    query?: HTTPQuery;\n    body?: HTTPBody;\n}\n\nexport function exists(json: any, key: string) {\n    const value = json[key];\n    return value !== null && value !== undefined;\n}\n\nexport function querystring(params: HTTPQuery, prefix: string = ''): string {\n    return Object.keys(params)\n        .map(key => querystringSingleKey(key, params[key], prefix))\n        .filter(part => part.length > 0)\n        .join('&');\n}\n\nfunction querystringSingleKey(key: string, value: string | number | null | undefined | boolean | Array<string | number | null | boolean> | Set<string | number | null | boolean> | HTTPQuery, keyPrefix: string = ''): string {\n    const fullKey = keyPrefix + (keyPrefix.length ? `[${key}]` : key);\n    if (value instanceof Array) {\n        const multiValue = value.map(singleValue => encodeURIComponent(String(singleValue)))\n            .join(`&${encodeURIComponent(fullKey)}=`);\n        return `${encodeURIComponent(fullKey)}=${multiValue}`;\n    }\n    if (value instanceof Set) {\n        const valueAsArray = Array.from(value);\n        return querystringSingleKey(key, valueAsArray, keyPrefix);\n    }\n    if (value instanceof Date) {\n        return `${encodeURIComponent(fullKey)}=${encodeURIComponent(value.toISOString())}`;\n    }\n    if (value instanceof Object) {\n        return querystring(value as HTTPQuery, fullKey);\n    }\n    return `${encodeURIComponent(fullKey)}=${encodeURIComponent(String(value))}`;\n}\n\nexport function mapValues(data: any, fn: (item: any) => any) {\n  return Object.keys(data).reduce(\n    (acc, key) => ({ ...acc, [key]: fn(data[key]) }),\n    {}\n  );\n}\n\nexport function canConsumeForm(consumes: Consume[]): boolean {\n    for (const consume of consumes) {\n        if ('multipart/form-data' === consume.contentType) {\n            return true;\n        }\n    }\n    return false;\n}\n\nexport interface Consume {\n    contentType: string;\n}\n\nexport interface RequestContext {\n    fetch: FetchAPI;\n    url: string;\n    init: RequestInit;\n}\n\nexport interface ResponseContext {\n    fetch: FetchAPI;\n    url: string;\n    init: RequestInit;\n    response: Response;\n}\n\nexport interface ErrorContext {\n    fetch: FetchAPI;\n    url: string;\n    init: RequestInit;\n    error: unknown;\n    response?: Response;\n}\n\nexport interface Middleware {\n    pre?(context: RequestContext): Promise<FetchParams | void>;\n    post?(context: ResponseContext): Promise<Response | void>;\n    onError?(context: ErrorContext): Promise<Response | void>;\n}\n\nexport interface ApiResponse<T> {\n    raw: Response;\n    value(): Promise<T>;\n}\n\nexport interface ResponseTransformer<T> {\n    (json: any): T;\n}\n\nexport class JSONApiResponse<T> {\n    constructor(public raw: Response, private transformer: ResponseTransformer<T> = (jsonValue: any) => jsonValue) {}\n\n    async value(): Promise<T> {\n        return this.transformer(await this.raw.json());\n    }\n}\n\nexport class VoidApiResponse {\n    constructor(public raw: Response) {}\n\n    async value(): Promise<void> {\n        return undefined;\n    }\n}\n\nexport class BlobApiResponse {\n    constructor(public raw: Response) {}\n\n    async value(): Promise<Blob> {\n        return await this.raw.blob();\n    };\n}\n\nexport class TextApiResponse {\n    constructor(public raw: Response) {}\n\n    async value(): Promise<string> {\n        return await this.raw.text();\n    };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * zrok\n * zrok client access\n *\n * The version of the OpenAPI document: 0.3.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface InviteRequest\n */\nexport interface InviteRequest {\n    /**\n     * \n     * @type {string}\n     * @memberof InviteRequest\n     */\n    email?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof InviteRequest\n     */\n    token?: string;\n}\n\n/**\n * Check if a given object implements the InviteRequest interface.\n */\nexport function instanceOfInviteRequest(value: object): boolean {\n    let isInstance = true;\n\n    return isInstance;\n}\n\nexport function InviteRequestFromJSON(json: any): InviteRequest {\n    return InviteRequestFromJSONTyped(json, false);\n}\n\nexport function InviteRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): InviteRequest {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'email': !exists(json, 'email') ? undefined : json['email'],\n        'token': !exists(json, 'token') ? undefined : json['token'],\n    };\n}\n\nexport function InviteRequestToJSON(value?: InviteRequest | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'email': value.email,\n        'token': value.token,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * zrok\n * zrok client access\n *\n * The version of the OpenAPI document: 0.3.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface LoginRequest\n */\nexport interface LoginRequest {\n    /**\n     * \n     * @type {string}\n     * @memberof LoginRequest\n     */\n    email?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof LoginRequest\n     */\n    password?: string;\n}\n\n/**\n * Check if a given object implements the LoginRequest interface.\n */\nexport function instanceOfLoginRequest(value: object): boolean {\n    let isInstance = true;\n\n    return isInstance;\n}\n\nexport function LoginRequestFromJSON(json: any): LoginRequest {\n    return LoginRequestFromJSONTyped(json, false);\n}\n\nexport function LoginRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): LoginRequest {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'email': !exists(json, 'email') ? undefined : json['email'],\n        'password': !exists(json, 'password') ? undefined : json['password'],\n    };\n}\n\nexport function LoginRequestToJSON(value?: LoginRequest | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'email': value.email,\n        'password': value.password,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * zrok\n * zrok client access\n *\n * The version of the OpenAPI document: 0.3.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface RegisterRequest\n */\nexport interface RegisterRequest {\n    /**\n     * \n     * @type {string}\n     * @memberof RegisterRequest\n     */\n    token?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof RegisterRequest\n     */\n    password?: string;\n}\n\n/**\n * Check if a given object implements the RegisterRequest interface.\n */\nexport function instanceOfRegisterRequest(value: object): boolean {\n    let isInstance = true;\n\n    return isInstance;\n}\n\nexport function RegisterRequestFromJSON(json: any): RegisterRequest {\n    return RegisterRequestFromJSONTyped(json, false);\n}\n\nexport function RegisterRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RegisterRequest {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'token': !exists(json, 'token') ? undefined : json['token'],\n        'password': !exists(json, 'password') ? undefined : json['password'],\n    };\n}\n\nexport function RegisterRequestToJSON(value?: RegisterRequest | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'token': value.token,\n        'password': value.password,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * zrok\n * zrok client access\n *\n * The version of the OpenAPI document: 0.3.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface RegisterResponse\n */\nexport interface RegisterResponse {\n    /**\n     * \n     * @type {string}\n     * @memberof RegisterResponse\n     */\n    token?: string;\n}\n\n/**\n * Check if a given object implements the RegisterResponse interface.\n */\nexport function instanceOfRegisterResponse(value: object): boolean {\n    let isInstance = true;\n\n    return isInstance;\n}\n\nexport function RegisterResponseFromJSON(json: any): RegisterResponse {\n    return RegisterResponseFromJSONTyped(json, false);\n}\n\nexport function RegisterResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RegisterResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'token': !exists(json, 'token') ? undefined : json['token'],\n    };\n}\n\nexport function RegisterResponseToJSON(value?: RegisterResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'token': value.token,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * zrok\n * zrok client access\n *\n * The version of the OpenAPI document: 0.3.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface ResetPasswordRequest\n */\nexport interface ResetPasswordRequest {\n    /**\n     * \n     * @type {string}\n     * @memberof ResetPasswordRequest\n     */\n    token?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ResetPasswordRequest\n     */\n    password?: string;\n}\n\n/**\n * Check if a given object implements the ResetPasswordRequest interface.\n */\nexport function instanceOfResetPasswordRequest(value: object): boolean {\n    let isInstance = true;\n\n    return isInstance;\n}\n\nexport function ResetPasswordRequestFromJSON(json: any): ResetPasswordRequest {\n    return ResetPasswordRequestFromJSONTyped(json, false);\n}\n\nexport function ResetPasswordRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResetPasswordRequest {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'token': !exists(json, 'token') ? undefined : json['token'],\n        'password': !exists(json, 'password') ? undefined : json['password'],\n    };\n}\n\nexport function ResetPasswordRequestToJSON(value?: ResetPasswordRequest | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'token': value.token,\n        'password': value.password,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * zrok\n * zrok client access\n *\n * The version of the OpenAPI document: 0.3.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface ResetPasswordRequestRequest\n */\nexport interface ResetPasswordRequestRequest {\n    /**\n     * \n     * @type {string}\n     * @memberof ResetPasswordRequestRequest\n     */\n    emailAddress?: string;\n}\n\n/**\n * Check if a given object implements the ResetPasswordRequestRequest interface.\n */\nexport function instanceOfResetPasswordRequestRequest(value: object): boolean {\n    let isInstance = true;\n\n    return isInstance;\n}\n\nexport function ResetPasswordRequestRequestFromJSON(json: any): ResetPasswordRequestRequest {\n    return ResetPasswordRequestRequestFromJSONTyped(json, false);\n}\n\nexport function ResetPasswordRequestRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResetPasswordRequestRequest {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'emailAddress': !exists(json, 'emailAddress') ? undefined : json['emailAddress'],\n    };\n}\n\nexport function ResetPasswordRequestRequestToJSON(value?: ResetPasswordRequestRequest | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'emailAddress': value.emailAddress,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * zrok\n * zrok client access\n *\n * The version of the OpenAPI document: 0.3.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface VerifyRequest\n */\nexport interface VerifyRequest {\n    /**\n     * \n     * @type {string}\n     * @memberof VerifyRequest\n     */\n    token?: string;\n}\n\n/**\n * Check if a given object implements the VerifyRequest interface.\n */\nexport function instanceOfVerifyRequest(value: object): boolean {\n    let isInstance = true;\n\n    return isInstance;\n}\n\nexport function VerifyRequestFromJSON(json: any): VerifyRequest {\n    return VerifyRequestFromJSONTyped(json, false);\n}\n\nexport function VerifyRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): VerifyRequest {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'token': !exists(json, 'token') ? undefined : json['token'],\n    };\n}\n\nexport function VerifyRequestToJSON(value?: VerifyRequest | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'token': value.token,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * zrok\n * zrok client access\n *\n * The version of the OpenAPI document: 0.3.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface VerifyResponse\n */\nexport interface VerifyResponse {\n    /**\n     * \n     * @type {string}\n     * @memberof VerifyResponse\n     */\n    email?: string;\n}\n\n/**\n * Check if a given object implements the VerifyResponse interface.\n */\nexport function instanceOfVerifyResponse(value: object): boolean {\n    let isInstance = true;\n\n    return isInstance;\n}\n\nexport function VerifyResponseFromJSON(json: any): VerifyResponse {\n    return VerifyResponseFromJSONTyped(json, false);\n}\n\nexport function VerifyResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): VerifyResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'email': !exists(json, 'email') ? undefined : json['email'],\n    };\n}\n\nexport function VerifyResponseToJSON(value?: VerifyResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'email': value.email,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * zrok\n * zrok client access\n *\n * The version of the OpenAPI document: 0.3.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  InviteRequest,\n  LoginRequest,\n  RegisterRequest,\n  RegisterResponse,\n  ResetPasswordRequest,\n  ResetPasswordRequestRequest,\n  VerifyRequest,\n  VerifyResponse,\n} from '../models/index';\nimport {\n    InviteRequestFromJSON,\n    InviteRequestToJSON,\n    LoginRequestFromJSON,\n    LoginRequestToJSON,\n    RegisterRequestFromJSON,\n    RegisterRequestToJSON,\n    RegisterResponseFromJSON,\n    RegisterResponseToJSON,\n    ResetPasswordRequestFromJSON,\n    ResetPasswordRequestToJSON,\n    ResetPasswordRequestRequestFromJSON,\n    ResetPasswordRequestRequestToJSON,\n    VerifyRequestFromJSON,\n    VerifyRequestToJSON,\n    VerifyResponseFromJSON,\n    VerifyResponseToJSON,\n} from '../models/index';\n\nexport interface InviteOperationRequest {\n    body?: InviteRequest;\n}\n\nexport interface LoginOperationRequest {\n    body?: LoginRequest;\n}\n\nexport interface RegisterOperationRequest {\n    body?: RegisterRequest;\n}\n\nexport interface ResetPasswordOperationRequest {\n    body?: ResetPasswordRequest;\n}\n\nexport interface ResetPasswordRequestOperationRequest {\n    body?: ResetPasswordRequestRequest;\n}\n\nexport interface VerifyOperationRequest {\n    body?: VerifyRequest;\n}\n\n/**\n * \n */\nexport class AccountApi extends runtime.BaseAPI {\n\n    /**\n     */\n    async inviteRaw(requestParameters: InviteOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/zrok.v1+json';\n\n        const response = await this.request({\n            path: `/invite`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: InviteRequestToJSON(requestParameters.body),\n        }, initOverrides);\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     */\n    async invite(requestParameters: InviteOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        await this.inviteRaw(requestParameters, initOverrides);\n    }\n\n    /**\n     */\n    async loginRaw(requestParameters: LoginOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/zrok.v1+json';\n\n        const response = await this.request({\n            path: `/login`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: LoginRequestToJSON(requestParameters.body),\n        }, initOverrides);\n\n        if (this.isJsonMime(response.headers.get('content-type'))) {\n            return new runtime.JSONApiResponse<string>(response);\n        } else {\n            return new runtime.TextApiResponse(response) as any;\n        }\n    }\n\n    /**\n     */\n    async login(requestParameters: LoginOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string> {\n        const response = await this.loginRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     */\n    async registerRaw(requestParameters: RegisterOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RegisterResponse>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/zrok.v1+json';\n\n        const response = await this.request({\n            path: `/register`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: RegisterRequestToJSON(requestParameters.body),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => RegisterResponseFromJSON(jsonValue));\n    }\n\n    /**\n     */\n    async register(requestParameters: RegisterOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RegisterResponse> {\n        const response = await this.registerRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     */\n    async resetPasswordRaw(requestParameters: ResetPasswordOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/zrok.v1+json';\n\n        const response = await this.request({\n            path: `/resetPassword`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: ResetPasswordRequestToJSON(requestParameters.body),\n        }, initOverrides);\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     */\n    async resetPassword(requestParameters: ResetPasswordOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        await this.resetPasswordRaw(requestParameters, initOverrides);\n    }\n\n    /**\n     */\n    async resetPasswordRequestRaw(requestParameters: ResetPasswordRequestOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/zrok.v1+json';\n\n        const response = await this.request({\n            path: `/resetPasswordRequest`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: ResetPasswordRequestRequestToJSON(requestParameters.body),\n        }, initOverrides);\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     */\n    async resetPasswordRequest(requestParameters: ResetPasswordRequestOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        await this.resetPasswordRequestRaw(requestParameters, initOverrides);\n    }\n\n    /**\n     */\n    async verifyRaw(requestParameters: VerifyOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<VerifyResponse>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/zrok.v1+json';\n\n        const response = await this.request({\n            path: `/verify`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: VerifyRequestToJSON(requestParameters.body),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => VerifyResponseFromJSON(jsonValue));\n    }\n\n    /**\n     */\n    async verify(requestParameters: VerifyOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<VerifyResponse> {\n        const response = await this.verifyRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n"],"mappings":"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","names":[]}