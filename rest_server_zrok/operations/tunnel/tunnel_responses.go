// Code generated by go-swagger; DO NOT EDIT.

package tunnel

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openziti-test-kitchen/zrok/rest_model_zrok"
)

// TunnelCreatedCode is the HTTP code returned for type TunnelCreated
const TunnelCreatedCode int = 201

/*TunnelCreated tunnel created

swagger:response tunnelCreated
*/
type TunnelCreated struct {

	/*
	  In: Body
	*/
	Payload *rest_model_zrok.TunnelResponse `json:"body,omitempty"`
}

// NewTunnelCreated creates TunnelCreated with default headers values
func NewTunnelCreated() *TunnelCreated {

	return &TunnelCreated{}
}

// WithPayload adds the payload to the tunnel created response
func (o *TunnelCreated) WithPayload(payload *rest_model_zrok.TunnelResponse) *TunnelCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the tunnel created response
func (o *TunnelCreated) SetPayload(payload *rest_model_zrok.TunnelResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TunnelCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// TunnelInternalServerErrorCode is the HTTP code returned for type TunnelInternalServerError
const TunnelInternalServerErrorCode int = 500

/*TunnelInternalServerError internal server error

swagger:response tunnelInternalServerError
*/
type TunnelInternalServerError struct {
}

// NewTunnelInternalServerError creates TunnelInternalServerError with default headers values
func NewTunnelInternalServerError() *TunnelInternalServerError {

	return &TunnelInternalServerError{}
}

// WriteResponse to the client
func (o *TunnelInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
