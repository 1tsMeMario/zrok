// Code generated by go-swagger; DO NOT EDIT.

package identity

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openziti-test-kitchen/zrok/rest_model"
)

// EnableReader is a Reader for the Enable structure.
type EnableReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EnableReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewEnableCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewEnableInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewEnableCreated creates a EnableCreated with default headers values
func NewEnableCreated() *EnableCreated {
	return &EnableCreated{}
}

/* EnableCreated describes a response with status code 201, with default header values.

environment enabled
*/
type EnableCreated struct {
	Payload *rest_model.EnableResponse
}

func (o *EnableCreated) Error() string {
	return fmt.Sprintf("[POST /enable][%d] enableCreated  %+v", 201, o.Payload)
}
func (o *EnableCreated) GetPayload() *rest_model.EnableResponse {
	return o.Payload
}

func (o *EnableCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.EnableResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEnableInternalServerError creates a EnableInternalServerError with default headers values
func NewEnableInternalServerError() *EnableInternalServerError {
	return &EnableInternalServerError{}
}

/* EnableInternalServerError describes a response with status code 500, with default header values.

internal server error
*/
type EnableInternalServerError struct {
}

func (o *EnableInternalServerError) Error() string {
	return fmt.Sprintf("[POST /enable][%d] enableInternalServerError ", 500)
}

func (o *EnableInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
